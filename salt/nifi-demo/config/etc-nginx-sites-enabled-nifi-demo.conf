# the upstream component nginx needs to connect to
upstream nifi {
    server localhost:8433;
}

{% if salt['elife.cfg']('cfn.outputs.DomainName') %}
# close connection on those that don't specify a 'host' header
# http://nginx.org/en/docs/http/request_processing.html
server {
    listen 80;
    listen 443;
    server_name "";
    return 444;
}
{% endif %}

# configuration of the server
server {
    # we always listen on port 80.
    # in non-dev environments port 80 is only available to internal traffic
    listen      80;
    {% if salt['elife.cfg']('cfn.outputs.DomainName') %}
    listen      443 ssl; # see /etc/nginx/nginx.conf for global ssl settings
    server_name {{ salt['elife.cfg']('project.project_hostname') }}
                {{ salt['elife.cfg']('project.full_hostname') }}
                {{ salt['elife.cfg']('project.int_project_hostname') }}
                {{ salt['elife.cfg']('project.int_full_hostname') }};
    {% else %}
    server_name localhost;
    {% endif %}

    charset utf-8;

    access_log /var/log/nginx/nifi-proxy.access.log;
    error_log /var/log/nginx/nifi-proxy.error.log;

    # temporary until nifi auth figured out
    #auth_basic "restricted";
    #auth_basic_user_file /etc/nginx/.nifihtpasswd;

    location / {
        proxy_pass https://nifi;
        
        # not mentioned, but this helps with "invalid host header" errors
        proxy_set_header Host            $host;

        # https://nifi.apache.org/docs/nifi-registry-docs/html/administration-guide.html#proxy_configuration
        proxy_set_header    X-ProxyScheme $scheme;
        proxy_set_header    X-ProxyHost $host;
        proxy_set_header    X-ProxyPort $server_port;
        proxy_pass_request_headers  on;
    }

}
